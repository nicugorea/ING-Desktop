//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp.INGService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/INGServer.Models")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string first_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_userField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string last_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strada_apartamentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strada_numarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strada_numeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string first_name {
            get {
                return this.first_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.first_nameField, value) != true)) {
                    this.first_nameField = value;
                    this.RaisePropertyChanged("first_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_user {
            get {
                return this.id_userField;
            }
            set {
                if ((this.id_userField.Equals(value) != true)) {
                    this.id_userField = value;
                    this.RaisePropertyChanged("id_user");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string last_name {
            get {
                return this.last_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.last_nameField, value) != true)) {
                    this.last_nameField = value;
                    this.RaisePropertyChanged("last_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strada_apartament {
            get {
                return this.strada_apartamentField;
            }
            set {
                if ((object.ReferenceEquals(this.strada_apartamentField, value) != true)) {
                    this.strada_apartamentField = value;
                    this.RaisePropertyChanged("strada_apartament");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strada_numar {
            get {
                return this.strada_numarField;
            }
            set {
                if ((object.ReferenceEquals(this.strada_numarField, value) != true)) {
                    this.strada_numarField = value;
                    this.RaisePropertyChanged("strada_numar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strada_nume {
            get {
                return this.strada_numeField;
            }
            set {
                if ((object.ReferenceEquals(this.strada_numeField, value) != true)) {
                    this.strada_numeField = value;
                    this.RaisePropertyChanged("strada_nume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Payment", Namespace="http://schemas.datacontract.org/2004/07/INGServer.Models")]
    [System.SerializableAttribute()]
    public partial class Payment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal amountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_paymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_recieverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_senderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal amount {
            get {
                return this.amountField;
            }
            set {
                if ((this.amountField.Equals(value) != true)) {
                    this.amountField = value;
                    this.RaisePropertyChanged("amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_payment {
            get {
                return this.id_paymentField;
            }
            set {
                if ((this.id_paymentField.Equals(value) != true)) {
                    this.id_paymentField = value;
                    this.RaisePropertyChanged("id_payment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_reciever {
            get {
                return this.id_recieverField;
            }
            set {
                if ((this.id_recieverField.Equals(value) != true)) {
                    this.id_recieverField = value;
                    this.RaisePropertyChanged("id_reciever");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_sender {
            get {
                return this.id_senderField;
            }
            set {
                if ((this.id_senderField.Equals(value) != true)) {
                    this.id_senderField = value;
                    this.RaisePropertyChanged("id_sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/INGServer.Models")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal balanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_accountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_userField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal balance {
            get {
                return this.balanceField;
            }
            set {
                if ((this.balanceField.Equals(value) != true)) {
                    this.balanceField = value;
                    this.RaisePropertyChanged("balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_account {
            get {
                return this.id_accountField;
            }
            set {
                if ((this.id_accountField.Equals(value) != true)) {
                    this.id_accountField = value;
                    this.RaisePropertyChanged("id_account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_user {
            get {
                return this.id_userField;
            }
            set {
                if ((this.id_userField.Equals(value) != true)) {
                    this.id_userField = value;
                    this.RaisePropertyChanged("id_user");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="INGService.IINGService")]
    public interface IINGService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IINGService/AddUser", ReplyAction="http://tempuri.org/IINGService/AddUserResponse")]
        bool AddUser(WpfApp.INGService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IINGService/AddUser", ReplyAction="http://tempuri.org/IINGService/AddUserResponse")]
        System.Threading.Tasks.Task<bool> AddUserAsync(WpfApp.INGService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IINGService/LogIn", ReplyAction="http://tempuri.org/IINGService/LogInResponse")]
        bool LogIn(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IINGService/LogIn", ReplyAction="http://tempuri.org/IINGService/LogInResponse")]
        System.Threading.Tasks.Task<bool> LogInAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IINGService/GetUser", ReplyAction="http://tempuri.org/IINGService/GetUserResponse")]
        WpfApp.INGService.User GetUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IINGService/GetUser", ReplyAction="http://tempuri.org/IINGService/GetUserResponse")]
        System.Threading.Tasks.Task<WpfApp.INGService.User> GetUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IINGService/GetUserIdByUsername", ReplyAction="http://tempuri.org/IINGService/GetUserIdByUsernameResponse")]
        int GetUserIdByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IINGService/GetUserIdByUsername", ReplyAction="http://tempuri.org/IINGService/GetUserIdByUsernameResponse")]
        System.Threading.Tasks.Task<int> GetUserIdByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IINGService/AddPayment", ReplyAction="http://tempuri.org/IINGService/AddPaymentResponse")]
        bool AddPayment(WpfApp.INGService.Payment payment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IINGService/AddPayment", ReplyAction="http://tempuri.org/IINGService/AddPaymentResponse")]
        System.Threading.Tasks.Task<bool> AddPaymentAsync(WpfApp.INGService.Payment payment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IINGService/GetAccounts", ReplyAction="http://tempuri.org/IINGService/GetAccountsResponse")]
        WpfApp.INGService.Account[] GetAccounts(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IINGService/GetAccounts", ReplyAction="http://tempuri.org/IINGService/GetAccountsResponse")]
        System.Threading.Tasks.Task<WpfApp.INGService.Account[]> GetAccountsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IINGService/GetSentPayments", ReplyAction="http://tempuri.org/IINGService/GetSentPaymentsResponse")]
        WpfApp.INGService.Payment[] GetSentPayments(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IINGService/GetSentPayments", ReplyAction="http://tempuri.org/IINGService/GetSentPaymentsResponse")]
        System.Threading.Tasks.Task<WpfApp.INGService.Payment[]> GetSentPaymentsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IINGService/GetRecievedPayments", ReplyAction="http://tempuri.org/IINGService/GetRecievedPaymentsResponse")]
        WpfApp.INGService.Payment[] GetRecievedPayments(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IINGService/GetRecievedPayments", ReplyAction="http://tempuri.org/IINGService/GetRecievedPaymentsResponse")]
        System.Threading.Tasks.Task<WpfApp.INGService.Payment[]> GetRecievedPaymentsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IINGService/CreateAccount", ReplyAction="http://tempuri.org/IINGService/CreateAccountResponse")]
        void CreateAccount(WpfApp.INGService.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IINGService/CreateAccount", ReplyAction="http://tempuri.org/IINGService/CreateAccountResponse")]
        System.Threading.Tasks.Task CreateAccountAsync(WpfApp.INGService.Account account);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IINGServiceChannel : WpfApp.INGService.IINGService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class INGServiceClient : System.ServiceModel.ClientBase<WpfApp.INGService.IINGService>, WpfApp.INGService.IINGService {
        
        public INGServiceClient() {
        }
        
        public INGServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public INGServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public INGServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public INGServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddUser(WpfApp.INGService.User user) {
            return base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> AddUserAsync(WpfApp.INGService.User user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public bool LogIn(string username, string password) {
            return base.Channel.LogIn(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> LogInAsync(string username, string password) {
            return base.Channel.LogInAsync(username, password);
        }
        
        public WpfApp.INGService.User GetUser(int id) {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<WpfApp.INGService.User> GetUserAsync(int id) {
            return base.Channel.GetUserAsync(id);
        }
        
        public int GetUserIdByUsername(string username) {
            return base.Channel.GetUserIdByUsername(username);
        }
        
        public System.Threading.Tasks.Task<int> GetUserIdByUsernameAsync(string username) {
            return base.Channel.GetUserIdByUsernameAsync(username);
        }
        
        public bool AddPayment(WpfApp.INGService.Payment payment) {
            return base.Channel.AddPayment(payment);
        }
        
        public System.Threading.Tasks.Task<bool> AddPaymentAsync(WpfApp.INGService.Payment payment) {
            return base.Channel.AddPaymentAsync(payment);
        }
        
        public WpfApp.INGService.Account[] GetAccounts(int id) {
            return base.Channel.GetAccounts(id);
        }
        
        public System.Threading.Tasks.Task<WpfApp.INGService.Account[]> GetAccountsAsync(int id) {
            return base.Channel.GetAccountsAsync(id);
        }
        
        public WpfApp.INGService.Payment[] GetSentPayments(int id) {
            return base.Channel.GetSentPayments(id);
        }
        
        public System.Threading.Tasks.Task<WpfApp.INGService.Payment[]> GetSentPaymentsAsync(int id) {
            return base.Channel.GetSentPaymentsAsync(id);
        }
        
        public WpfApp.INGService.Payment[] GetRecievedPayments(int id) {
            return base.Channel.GetRecievedPayments(id);
        }
        
        public System.Threading.Tasks.Task<WpfApp.INGService.Payment[]> GetRecievedPaymentsAsync(int id) {
            return base.Channel.GetRecievedPaymentsAsync(id);
        }
        
        public void CreateAccount(WpfApp.INGService.Account account) {
            base.Channel.CreateAccount(account);
        }
        
        public System.Threading.Tasks.Task CreateAccountAsync(WpfApp.INGService.Account account) {
            return base.Channel.CreateAccountAsync(account);
        }
    }
}
